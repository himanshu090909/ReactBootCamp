{"ast":null,"code":"var _jsxFileName = \"/home/himanshu/ReactBootCamp/react2/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Fruit from './Fruit';\nimport styles from './appStyles.module.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      fruits: []\n    };\n\n    this.insertIntoTable = () => {\n      let val = this.refs.textbox.value;\n\n      if (val === '' || this.countCharacter(val) > 1) {\n        alert(\"input is wrong please provide proper input\");\n      } else {\n        let name = val.split(\"-\");\n        let names = name[0];\n        let price = name[1];\n\n        if (isNaN(price)) {\n          alert(\"quantity should be an number\");\n        } else {\n          const fruits = [...this.state.fruits];\n          const fruit = {\n            name: names,\n            price: price\n          };\n          fruits.push(fruit);\n          this.setState({\n            fruits: fruits\n          });\n          this.clearTextArea();\n        }\n      }\n    };\n\n    this.deleteFruitHandler = index => {\n      const fruits = [...this.state.fruits];\n      fruits.splice(index, 1);\n      this.setState({\n        fruits: fruits\n      });\n    };\n\n    this.handleKeyPress = target => {\n      if (target.charCode == 13) {\n        this.insertIntoTable();\n      }\n    };\n  }\n\n  clearTextArea() {\n    document.getElementById(\"textBoxId\").value = '';\n  }\n\n  countCharacter(string) {\n    let count = 0;\n\n    for (let elements of string) {\n      if (elements == '-') {\n        count = count + 1;\n      }\n    }\n\n    return count;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: styles.header,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, \"React Assignment\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: styles.textBox,\n      ref: \"textbox\",\n      id: \"textBoxId\",\n      onKeyPress: this.handleKeyPress,\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.insertIntoTable,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, \"Submit\"), this.state.fruits.map((fruit, index) => {\n      return /*#__PURE__*/React.createElement(Fruit, {\n        name: fruit.name,\n        price: fruit.price,\n        deleteFruitHandler: () => this.deleteFruitHandler(index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 20\n        }\n      });\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/himanshu/ReactBootCamp/react2/src/App.js"],"names":["React","Component","Fruit","styles","App","state","fruits","insertIntoTable","val","refs","textbox","value","countCharacter","alert","name","split","names","price","isNaN","fruit","push","setState","clearTextArea","deleteFruitHandler","index","splice","handleKeyPress","target","charCode","document","getElementById","string","count","elements","render","header","textBox","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Fruit from './Fruit'\nimport styles from './appStyles.module.css';\n\nclass App extends Component \n{\n  state = {\n    fruits: []\n  };\n\n\n    insertIntoTable=()=>{\n    let val = this.refs.textbox.value;\n    if(val===''||this.countCharacter(val)>1)\n    {\n      alert(\"input is wrong please provide proper input\")\n    }\n    else\n    {\n    let name =  val.split(\"-\");\n    let names = name[0];\n    let price = name[1];\n    if(isNaN(price))\n    {\n      alert(\"quantity should be an number\");\n    }\n    else\n    {\n    const fruits = [...this.state.fruits];\n    const fruit =\n    {\n      name:names,\n      price:price\n    }\n    fruits.push(fruit);\n    this.setState({fruits:fruits});\n    this.clearTextArea();\n  }\n  }\n  }\n\n  clearTextArea()\n  {\n    document.getElementById(\"textBoxId\").value='';\n  }\n\n   deleteFruitHandler = (index) => {\n    const fruits = [...this.state.fruits];\n    fruits.splice(index, 1);\n    this.setState({fruits: fruits});\n  }\n\n  countCharacter(string)\n  {\n    let count =0;\n    for(let elements of string)\n    {\n      if(elements=='-')\n      {\n        count=count+1;\n      }\n    }\n    return count;\n  }\n\n  handleKeyPress = (target) =>{\n    if(target.charCode==13){\n      this.insertIntoTable();\n    } \n  }\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <p className={styles.header}>React Assignment</p>\n       \n        <input className={styles.textBox} ref=\"textbox\" id=\"textBoxId\" onKeyPress={this.handleKeyPress} type=\"text\"/>\n        <br/>\n       \n        <button onClick={this.insertIntoTable}>Submit</button>\n        {        \n             this.state.fruits.map((fruit,index) => {\n            return <Fruit\n            name={fruit.name} \n            price={fruit.price}\n            deleteFruitHandler={() => this.deleteFruitHandler(index)}\n        />\n      })}\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}