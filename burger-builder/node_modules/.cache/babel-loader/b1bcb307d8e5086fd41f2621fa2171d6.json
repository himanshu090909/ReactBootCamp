{"ast":null,"code":"var _jsxFileName = \"/home/himanshu/ReactTraining/burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/Ui/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalPrice: 4,\n      purchaseable: false,\n      purchasing: false\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.addIngredietnHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCoount = oldCount + 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCoount;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.removeIngredietnHandler = type => {\n      const oldCount = this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      const updatedCoount = oldCount - 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCoount;\n      const priceDeduction = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceDeduction;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchaseContinue = () => {\n      alert(\"you continue\");\n    };\n  }\n\n  updatePurchaseState(ingredients) {\n    const sum = Object.keys(ingredients).map(igkey => {\n      return ingredients[igkey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0);\n    this.setState({\n      purchaseable: sum > 0\n    });\n  }\n\n  render() {\n    const disabledInfo = { ...this.state.ingredients\n    };\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    return /*#__PURE__*/React.createElement(Aux, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.purchasing,\n      modalClosed: this.purchaseCancelHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(OrderSummary, {\n      ingredients: this.state.ingredients,\n      purchaseCancelled: this.purchaseCancelHandler,\n      purchaseContinue: this.purchaseContinue,\n      price: this.state.totalPrice,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Burger, {\n      ingredients: this.state.ingredients,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(BuildControls, {\n      ingredientsAdded: this.addIngredietnHandler,\n      ingredientsRemoved: this.removeIngredietnHandler,\n      disabled: disabledInfo,\n      purchaseable: this.state.purchaseable,\n      price: this.state.totalPrice,\n      ordered: this.purchaseHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["/home/himanshu/ReactTraining/burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","Modal","OrderSummary","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","ingredients","totalPrice","purchaseable","purchasing","purchaseHandler","setState","addIngredietnHandler","type","oldCount","updatedCoount","updatedIngredients","priceAddition","oldPrice","newPrice","updatePurchaseState","removeIngredietnHandler","priceDeduction","purchaseCancelHandler","purchaseContinue","alert","sum","Object","keys","map","igkey","reduce","el","render","disabledInfo","key"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/Ui/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nconst INGREDIENT_PRICES = {\n    salad:0.5,\n    cheese:0.4,\n    meat:1.3,\n    bacon:0.7\n}\n\nclass BurgerBuilder extends Component {\n    state={\n        ingredients:{\n            salad:0,\n            bacon:0,\n            cheese:0,\n            meat:0\n        },\n        totalPrice: 4,\n        purchaseable:false,\n        purchasing :false\n    }\n\n     purchaseHandler=()=>{\n         this.setState({purchasing:true});\n     }\n\n    updatePurchaseState (ingredients){\n        const sum = Object.keys(ingredients).map(igkey=>{\n            return ingredients[igkey];\n        })\n        .reduce((sum,el)=>{\n            return sum+el;            \n        },0);\n        this.setState({purchaseable:sum>0});\n\n    }\n\n    addIngredietnHandler=(type)=>{\n\n        const oldCount = this.state.ingredients[type];\n        const updatedCoount = oldCount+1;\n        const updatedIngredients={\n            ...this.state.ingredients\n        };\n        updatedIngredients[type]=updatedCoount;\n        const priceAddition = INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice+priceAddition;\n        this.setState({totalPrice:newPrice,ingredients:updatedIngredients});\n        this.updatePurchaseState(updatedIngredients);\n    }\n\n    removeIngredietnHandler=(type)=>{\n        const oldCount = this.state.ingredients[type];\n        if(oldCount<=0)\n        {\n            return;\n        }\n        const updatedCoount = oldCount-1;\n        const updatedIngredients={\n            ...this.state.ingredients\n        };\n        updatedIngredients[type]=updatedCoount;\n        const priceDeduction = INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice-priceDeduction;\n        this.setState({totalPrice:newPrice,ingredients:updatedIngredients});\n        this.updatePurchaseState(updatedIngredients);\n    }\n\n    purchaseCancelHandler=()=>{\n        this.setState({purchasing:false});\n    }\n\n    purchaseContinue=()=>{\n        alert(\"you continue\");\n    }\n\n    render() {\n        const disabledInfo={\n            ...this.state.ingredients\n        };\n        for(let key in disabledInfo)\n        {\n            disabledInfo[key]=disabledInfo[key]<=0\n\n        }\n        return (\n            <Aux>\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\n                <OrderSummary ingredients = {this.state.ingredients}\n                purchaseCancelled={this.purchaseCancelHandler} \n                purchaseContinue={this.purchaseContinue}\n                price={this.state.totalPrice}\n                />\n                </Modal>\n                <Burger ingredients={this.state.ingredients}/>\n                <BuildControls\n                ingredientsAdded={this.addIngredietnHandler}\n                ingredientsRemoved={this.removeIngredietnHandler}\n                disabled={disabledInfo}\n                purchaseable={this.state.purchaseable}\n                price={this.state.totalPrice}\n                ordered={this.purchaseHandler}\n                />\n            </Aux>\n        );\n    }\n}\n\nexport default BurgerBuilder\n"]},"metadata":{},"sourceType":"module"}